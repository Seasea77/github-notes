一、目的
借助 github 托管项目代码----放到仓库中（Repository）

二、基本概念
1仓库（Repository）
仓库用来存放代码，每个项目对应一个仓库，多个开源项目则有多个仓库

2关注(Watch)
看到开源项目感觉不错，点击Watch，那么以后该项目有任何更新，自己都会第一时间收到关于这个项目的通知提醒
情景：张三关注了李四的项目，李四添加项目文件，张三的 github 主页就会有该动态提示

3收藏（Star）
收藏项目，方便下次查看
情景：张三无意访问到李四的开源项目感觉不错并进行收藏

4复制克隆项目（Fork）
Fork的项目是独立存在的
1.张三/test仓库
2.李四/test仓库
forked from 张三/test仓库
情景：张三 fork 了李四的项目，相当于复制了李四的项目，所以自己也单独有了一个一样名称的仓库（注：该仓库声明来自李四，但是是独立存在的）

5发起请求（Pull Request）
李四fork了张三的test仓库
李四修改了forkd test仓库,并可以发送请求（Pull Request）---将自己修改部分, 提醒张三可以进行更改，等待李四查看
李四感觉还不错，则可以进行合并，到自己的仓库中
情景：张三修改了 fork 李四的项目中的文件，希望更新到原来的仓库，这时候他要新建一个 pull requset； 李四收到动态消息之后可以选择：merge pull resquest 将项目进行同步更改/合并

6事务卡片（Issue）
你的一个开源项目，别人发现有Bug、或者哪里做的不好，就可以向你提出一个Issue(问题)，你就可以根据Issue进行修复Bug以及问题
情景：张三发现李四开源项目有问题或者Bug，则提交了一个 Issue,告知李四; 李四隔天登陆在 github 主页看到通知并和张三交流，最后关闭 Issue

7主页
Github主页
账号创建成功或者点击网站导航栏github图标都可以进入的github主页
该页左侧主要显示用户动态以及关注用户仓库的动态，右侧显示所有的git库
仓库主页
仓库主页主要显示项目的信息，eg:项目代码、版本、收藏/关注/fork情况
个人主页
个人信息：头像、个人简介、关注我的人、我关注的人、我关注的git库,我的开源项目、我贡献的开源形目等信息
图示如下
